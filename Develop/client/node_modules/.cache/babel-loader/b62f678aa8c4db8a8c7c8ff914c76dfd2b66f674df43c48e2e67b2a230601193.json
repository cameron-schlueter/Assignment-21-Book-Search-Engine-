{"ast":null,"code":"var _jsxFileName = \"/Users/camsc/Desktop/Assignment 21 (Book Search Engine) /Develop/client/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ApolloProvider, InMemoryCache, ApolloClient, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport SearchBooks from './pages/SearchBooks';\nimport SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: SearchBooks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/saved\",\n            component: SavedBooks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            render: () => /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"display-2\",\n              children: \"Wrong page!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Switch","Route","ApolloProvider","InMemoryCache","ApolloClient","createHttpLink","setContext","SearchBooks","SavedBooks","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","httpLink","uri","authLink","_","_ref","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","component","render","className","_c","$RefreshReg$"],"sources":["/Users/camsc/Desktop/Assignment 21 (Book Search Engine) /Develop/client/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ApolloProvider, InMemoryCache, ApolloClient, createHttpLink } from'@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport SearchBooks from './pages/SearchBooks';\nimport SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n    <Router>\n      <>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={SearchBooks} />\n          <Route exact path='/saved' component={SavedBooks} />\n          <Route render={() => <h1 className='display-2'>Wrong page!</h1>} />\n        </Switch>\n      </>\n    </Router></ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,SAASC,cAAc,EAAEC,aAAa,EAAEC,YAAY,EAAEC,cAAc,QAAO,gBAAgB;AAC3F,SAASC,UAAU,QAAQ,6BAA6B;AACxD,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,QAAQ,GAAGT,cAAc,CAAC;EAC9BU,GAAG,EAAE;AACP,CAAC,CAAC;;AAEF;AACA,MAAMC,QAAQ,GAAGV,UAAU,CAAC,CAACW,CAAC,EAAAC,IAAA,KAAkB;EAAA,IAAhB;IAAEC;EAAQ,CAAC,GAAAD,IAAA;EACzC;EACA,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC9C;EACA,OAAO;IACLH,OAAO,EAAE;MACP,GAAGA,OAAO;MACVI,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAC,GAAG;IAC7C;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMI,MAAM,GAAG,IAAIpB,YAAY,CAAC;EAC9B;EACAqB,IAAI,EAAET,QAAQ,CAACU,MAAM,CAACZ,QAAQ,CAAC;EAC/Ba,KAAK,EAAE,IAAIxB,aAAa;AAC1B,CAAC,CAAC;AACF,SAASyB,GAAGA,CAAA,EAAG;EACb,oBACEjB,OAAA,CAACT,cAAc;IAACsB,MAAM,EAAEA,MAAO;IAAAK,QAAA,eAC/BlB,OAAA,CAACZ,MAAM;MAAA8B,QAAA,eACLlB,OAAA,CAAAE,SAAA;QAAAgB,QAAA,gBACElB,OAAA,CAACF,MAAM;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACVtB,OAAA,CAACX,MAAM;UAAA6B,QAAA,gBACLlB,OAAA,CAACV,KAAK;YAACiC,KAAK;YAACC,IAAI,EAAC,GAAG;YAACC,SAAS,EAAE7B;UAAY;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eAChDtB,OAAA,CAACV,KAAK;YAACiC,KAAK;YAACC,IAAI,EAAC,QAAQ;YAACC,SAAS,EAAE5B;UAAW;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eACpDtB,OAAA,CAACV,KAAK;YAACoC,MAAM,EAAEA,CAAA,kBAAM1B,OAAA;cAAI2B,SAAS,EAAC,WAAW;cAAAT,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAM;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC5D;MAAA;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACI;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAiB;AAE9B;AAACM,EAAA,GAdQX,GAAG;AAgBZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}